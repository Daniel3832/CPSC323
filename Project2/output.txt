-----------------------------------------------------------------------------------
Token: Separator Lexeme: $$

<Rat12SU>::=$$ <OptFunctionDefinitions> $$ <OptDeclarationList> <StatementList> $$
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Keyword Lexeme: function

<OptFunctionDefinitions>::=<FunctionDefinitions>
<FunctionDefinitions>::=<Function> <FunctionDefinitionsPrime>
<Function>::=function IDENTIFIER ( <Parameter> ) <OptDeclarationList> <Body>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: (

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<Parameter>::=IDENTIFIER : <Qualifier>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: :

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Keyword Lexeme: int

<Qualifier>::=int
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: )

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Keyword Lexeme: begin

<OptDeclarationList>::=<Body>
<Body>::=begin <StatementList> end
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Keyword Lexeme: return

<StatementList>::=<Statement> <StatementListPrime>
<Statement>::=<Return>
<Return>::=return <Expression> ;
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Integer Lexeme: INTEGER

<Expression>::=<Term> <ExpressionPrime>
<Term>::=<Factor> <TermPrime>
<Factor>::=<Primary>
<Primary>::=INTEGER
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: *

<TermPrime>::=* <Factor>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: (

<Factor>::=<Primary>
<Primary>::=( <Expression> )
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<Expression>::=<Term> <ExpressionPrime>
<Term>::=<Factor> <TermPrime>
<Factor>::=<Primary>
<Primary>::=<ID> <PrimaryPrime>
<ID>::=IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: -

<IDPrime>::=<Empty>
<Empty>::=epsilon
<PrimaryPrime>::=<Empty>
<Empty>::=epsilon
<TermPrime>::=<Empty>
<Empty>::=epsilon
<ExpressionPrime>::=- <Term> <ExpressionPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Integer Lexeme: INTEGER

<Term>::=<Factor> <TermPrime>
<Factor>::=<Primary>
<Primary>::=INTEGER
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: )

<TermPrime>::=<Empty>
<Empty>::=epsilon
<ExpressionPrime>::=<Empty>
<Empty>::=epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: /

<ExpressionPrime>::=<TermPrime>
<TermPrime>::=/ <Factor>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Integer Lexeme: INTEGER

<Factor>::=<Primary>
<Primary>::=INTEGER
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ;

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Keyword Lexeme: end

<StatementListPrime>::=<Empty>
<Empty>::=epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: $$

<Body>::=<Empty>
<Empty>::=epsilon
<FunctionDefinitionsPrime>::=<Empty>
<Empty>::=epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Keyword Lexeme: int

<OptDeclarationList>::=<DeclarationList>
<DeclarationList>::=<Declaration> <DeclarationListPrime> ;
<Declaration>::=<Qualifier> <ID>
<Qualifier>::=int
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<ID>::=IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ,

<IDPrime>::=, <ID>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<ID>::=IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ,

<IDPrime>::=, <ID>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<ID>::=IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ;

<IDPrime>::=<Empty>
<Empty>::=epsilon
<DeclarationListPrime>::=<Empty>
<Empty>::=epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<StatementList>::=<Statement> <StatementListPrime>
<Statement>::=<Assign>
<Assign>::=IDENTIFIER := <Expression> ;
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: :=

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Integer Lexeme: INTEGER

<Expression>::=<Term> <ExpressionPrime>
<Term>::=<Factor> <TermPrime>
<Factor>::=<Primary>
<Primary>::=INTEGER
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ;

<TermPrime>::=<Empty>
<Empty>::=epsilon
<ExpressionPrime>::=<Empty>
<Empty>::=epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<StatementListPrime>::=<StatementList>
<StatementList>::=<Statement> <StatementListPrime>
<Statement>::=<Assign>
<Assign>::=IDENTIFIER := <Expression> ;
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: :=

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Integer Lexeme: INTEGER

<Expression>::=<Term> <ExpressionPrime>
<Term>::=<Factor> <TermPrime>
<Factor>::=<Primary>
<Primary>::=INTEGER
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ;

<TermPrime>::=<Empty>
<Empty>::=epsilon
<ExpressionPrime>::=<Empty>
<Empty>::=epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Keyword Lexeme: read

<StatementListPrime>::=<StatementList>
<StatementList>::=<Statement> <StatementListPrime>
<Statement>::=<Read>
<Read>::=read ( <ID> ) ;
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: (

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<ID>::=IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: )

<IDPrime>::=<Empty>
<Empty>::=epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ;

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Keyword Lexeme: while

<StatementListPrime>::=<StatementList>
<StatementList>::=<Statement> <StatementListPrime>
<Statement>::=<While>
<While>::=while ( <Condition> ) do <Statement>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: (

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<Condition>::=<Expression> <Relop> <Expression>
<Expression>::=<Term> <ExpressionPrime>
<Term>::=<Factor> <TermPrime>
<Factor>::=<Primary>
<Primary>::=<ID> <PrimaryPrime>
<ID>::=IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: <

<IDPrime>::=<Empty>
<Empty>::=epsilon
<PrimaryPrime>::=<Empty>
<Empty>::=epsilon
<TermPrime>::=<Empty>
<Empty>::=epsilon
<ExpressionPrime>::=<Empty>
<Empty>::=epsilon
<Relop>::=<
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<Expression>::=<Term> <ExpressionPrime>
<Term>::=<Factor> <TermPrime>
<Factor>::=<Primary>
<Primary>::=<ID> <PrimaryPrime>
<ID>::=IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: )

<IDPrime>::=<Empty>
<Empty>::=epsilon
<PrimaryPrime>::=<Empty>
<Empty>::=epsilon
<TermPrime>::=<Empty>
<Empty>::=epsilon
<ExpressionPrime>::=<Empty>
<Empty>::=epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Keyword Lexeme: do

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: {

<Statement>::=<Compound>
<Compound>::={ <StatementList> }
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<StatementList>::=<Statement> <StatementListPrime>
<Statement>::=<Assign>
<Assign>::=IDENTIFIER := <Expression> ;
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: :=

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<Expression>::=<Term> <ExpressionPrime>
<Term>::=<Factor> <TermPrime>
<Factor>::=<Primary>
<Primary>::=<ID> <PrimaryPrime>
<ID>::=IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: +

<IDPrime>::=<Empty>
<Empty>::=epsilon
<PrimaryPrime>::=<Empty>
<Empty>::=epsilon
<TermPrime>::=<Empty>
<Empty>::=epsilon
<ExpressionPrime>::=+ <Term> <ExpressionPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<Term>::=<Factor> <TermPrime>
<Factor>::=<Primary>
<Primary>::=<ID> <PrimaryPrime>
<ID>::=IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ;

<IDPrime>::=<Empty>
<Empty>::=epsilon
<PrimaryPrime>::=<Empty>
<Empty>::=epsilon
<TermPrime>::=<Empty>
<Empty>::=epsilon
<ExpressionPrime>::=<Empty>
<Empty>::=epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<StatementListPrime>::=<StatementList>
<StatementList>::=<Statement> <StatementListPrime>
<Statement>::=<Assign>
<Assign>::=IDENTIFIER := <Expression> ;
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: :=

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<Expression>::=<Term> <ExpressionPrime>
<Term>::=<Factor> <TermPrime>
<Factor>::=<Primary>
<Primary>::=<ID> <PrimaryPrime>
<ID>::=IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: +

<IDPrime>::=<Empty>
<Empty>::=epsilon
<PrimaryPrime>::=<Empty>
<Empty>::=epsilon
<TermPrime>::=<Empty>
<Empty>::=epsilon
<ExpressionPrime>::=+ <Term> <ExpressionPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Integer Lexeme: INTEGER

<Term>::=<Factor> <TermPrime>
<Factor>::=<Primary>
<Primary>::=INTEGER
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ;

<TermPrime>::=<Empty>
<Empty>::=epsilon
<ExpressionPrime>::=<Empty>
<Empty>::=epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: }

<StatementListPrime>::=<Empty>
<Empty>::=epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Keyword Lexeme: write

<StatementListPrime>::=<StatementList>
<StatementList>::=<Statement> <StatementListPrime>
<Statement>::=<Write>
<Write>::=write ( <Expression> ) ;
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: (

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<Expression>::=<Term> <ExpressionPrime>
<Term>::=<Factor> <TermPrime>
<Factor>::=<Primary>
<Primary>::=<ID> <PrimaryPrime>
<ID>::=IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: +

<IDPrime>::=<Empty>
<Empty>::=epsilon
<PrimaryPrime>::=<Empty>
<Empty>::=epsilon
<TermPrime>::=<Empty>
<Empty>::=epsilon
<ExpressionPrime>::=+ <Term> <ExpressionPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<Term>::=<Factor> <TermPrime>
<Factor>::=<Primary>
<Primary>::=<ID> <PrimaryPrime>
<ID>::=IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: )

<IDPrime>::=<Empty>
<Empty>::=epsilon
<PrimaryPrime>::=<Empty>
<Empty>::=epsilon
<TermPrime>::=<Empty>
<Empty>::=epsilon
<ExpressionPrime>::=<Empty>
<Empty>::=epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ;

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: $$

<StatementListPrime>::=<Empty>
<Empty>::=epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: $

-----------------------------------------------------------------------------------

