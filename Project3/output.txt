-----------------------------------------------------------------------------------
Token: Separator Lexeme: $$

<Rat12SU>::= $$ <OptFunctionDefinitions> $$ <OptDeclarationList> <StatementList> $$
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: $$

<OptFunctionDefinitions>::= epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Keyword Lexeme: int

<OptDeclarationList>::= <DeclarationList>
<DeclarationList>::= <Declaration> ; <DeclarationListPrime>
<Declaration>::= <Qualifier> <ID>
<Qualifier>::= int
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<ID>::= IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ,

<IDPrime>::= , <ID>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<ID>::= IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ,

<IDPrime>::= , <ID>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<ID>::= IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ;

<IDPrime>::= epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<DeclarationListPrime>::= epsilon
<StatementList>::= <Statement> <StatementListPrime>
<Statement>::= <Assign>
<Assign>::= IDENTIFIER := <Expression> ;
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: :=

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Integer Lexeme: INTEGER

<Expression>::= <Term> <ExpressionPrime>
<Term>::= <Factor> <TermPrime>
<Factor>::= <Primary>
<Primary>::= INTEGER
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ;

<TermPrime>::= epsilon
<ExpressionPrime>::= epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<StatementListPrime>::= <StatementList>
<StatementList>::= <Statement> <StatementListPrime>
<Statement>::= <Assign>
<Assign>::= IDENTIFIER := <Expression> ;
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: :=

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Integer Lexeme: INTEGER

<Expression>::= <Term> <ExpressionPrime>
<Term>::= <Factor> <TermPrime>
<Factor>::= <Primary>
<Primary>::= INTEGER
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ;

<TermPrime>::= epsilon
<ExpressionPrime>::= epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Keyword Lexeme: read

<StatementListPrime>::= <StatementList>
<StatementList>::= <Statement> <StatementListPrime>
<Statement>::= <Read>
<Read>::= read ( <ID> ) ;
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: (

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<ID>::= IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: )

<IDPrime>::= epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ;

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Keyword Lexeme: while

<StatementListPrime>::= <StatementList>
<StatementList>::= <Statement> <StatementListPrime>
<Statement>::= <While>
<While>::= while ( <Condition> ) do <Statement>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: (

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<Condition>::= <Expression> <Relop> <Expression>
<Expression>::= <Term> <ExpressionPrime>
<Term>::= <Factor> <TermPrime>
<Factor>::= <Primary>
<Primary>::= <ID> <PrimaryPrime>
<ID>::= IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: <

<IDPrime>::= epsilon
<PrimaryPrime>::= epsilon
<TermPrime>::= epsilon
<ExpressionPrime>::= epsilon
<Relop>::= <
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<Expression>::= <Term> <ExpressionPrime>
<Term>::= <Factor> <TermPrime>
<Factor>::= <Primary>
<Primary>::= <ID> <PrimaryPrime>
<ID>::= IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: )

<IDPrime>::= epsilon
<PrimaryPrime>::= epsilon
<TermPrime>::= epsilon
<ExpressionPrime>::= epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Keyword Lexeme: do

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: {

<Statement>::= <Compound>
<Compound>::= { <StatementList> }
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<StatementList>::= <Statement> <StatementListPrime>
<Statement>::= <Assign>
<Assign>::= IDENTIFIER := <Expression> ;
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: :=

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<Expression>::= <Term> <ExpressionPrime>
<Term>::= <Factor> <TermPrime>
<Factor>::= <Primary>
<Primary>::= <ID> <PrimaryPrime>
<ID>::= IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: +

<IDPrime>::= epsilon
<PrimaryPrime>::= epsilon
<TermPrime>::= epsilon
<ExpressionPrime>::= + <Term> <ExpressionPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<Term>::= <Factor> <TermPrime>
<Factor>::= <Primary>
<Primary>::= <ID> <PrimaryPrime>
<ID>::= IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ;

<IDPrime>::= epsilon
<PrimaryPrime>::= epsilon
<TermPrime>::= epsilon
<ExpressionPrime>::= epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<StatementListPrime>::= <StatementList>
<StatementList>::= <Statement> <StatementListPrime>
<Statement>::= <Assign>
<Assign>::= IDENTIFIER := <Expression> ;
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: :=

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<Expression>::= <Term> <ExpressionPrime>
<Term>::= <Factor> <TermPrime>
<Factor>::= <Primary>
<Primary>::= <ID> <PrimaryPrime>
<ID>::= IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: +

<IDPrime>::= epsilon
<PrimaryPrime>::= epsilon
<TermPrime>::= epsilon
<ExpressionPrime>::= + <Term> <ExpressionPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Integer Lexeme: INTEGER

<Term>::= <Factor> <TermPrime>
<Factor>::= <Primary>
<Primary>::= INTEGER
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ;

<TermPrime>::= epsilon
<ExpressionPrime>::= epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: }

<StatementListPrime>::= epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Keyword Lexeme: write

<StatementListPrime>::= <StatementList>
<StatementList>::= <Statement> <StatementListPrime>
<Statement>::= <Write>
<Write>::= write ( <Expression> ) ;
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: (

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<Expression>::= <Term> <ExpressionPrime>
<Term>::= <Factor> <TermPrime>
<Factor>::= <Primary>
<Primary>::= <ID> <PrimaryPrime>
<ID>::= IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Operator Lexeme: +

<IDPrime>::= epsilon
<PrimaryPrime>::= epsilon
<TermPrime>::= epsilon
<ExpressionPrime>::= + <Term> <ExpressionPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Identifier Lexeme: IDENTIFIER

<Term>::= <Factor> <TermPrime>
<Factor>::= <Primary>
<Primary>::= <ID> <PrimaryPrime>
<ID>::= IDENTIFIER <IDPrime>
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: )

<IDPrime>::= epsilon
<PrimaryPrime>::= epsilon
<TermPrime>::= epsilon
<ExpressionPrime>::= epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: ;

-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: $$

<StatementListPrime>::= epsilon
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
Token: Separator Lexeme: $

-----------------------------------------------------------------------------------


--------------- Assembly Code Listing ---------------

Address	Op	Oprnd
1	PUSHI	0
2	POPM	1002
3	PUSHI	1
4	POPM	1000
5	PUSHS	
6	POPM	1001
7	LABEL	
8	PUSHM	1000
9	PUSHM	1001
10	LES	
11	JUMPZ	21
12	PUSHM	1002
13	PUSHM	1000
14	ADD	
15	POPM	1002
16	PUSHM	1000
17	PUSHI	1
18	ADD	
19	POPM	1000
20	JUMP	7
21	PUSHS	
22	PUSHM	1002
23	PUSHM	1001
24	ADD	
25	POPS	

--------------- Symbol Table ---------------

Identifier   MemoryLocation      Type
i		1000		Integer
max		1001		Integer
sum		1002		Integer
